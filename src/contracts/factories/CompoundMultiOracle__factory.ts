/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  CompoundMultiOracle,
  CompoundMultiOracleInterface,
} from "../CompoundMultiOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes6",
        name: "baseId",
        type: "bytes6",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "kind",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "SourcesSet",
    type: "event",
  },
  {
    inputs: [],
    name: "SCALE_FACTOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "base",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "kind",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "base",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "kind",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "peek",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updateTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "base",
        type: "bytes6",
      },
      {
        internalType: "bytes32",
        name: "kind",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "setSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6[]",
        name: "bases",
        type: "bytes6[]",
      },
      {
        internalType: "bytes32[]",
        name: "kinds",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "sources_",
        type: "address[]",
      },
    ],
    name: "setSources",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "",
        type: "bytes6",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sources",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class CompoundMultiOracle__factory {
  static readonly abi = _abi;
  static createInterface(): CompoundMultiOracleInterface {
    return new utils.Interface(_abi) as CompoundMultiOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundMultiOracle {
    return new Contract(address, _abi, signerOrProvider) as CompoundMultiOracle;
  }
}
