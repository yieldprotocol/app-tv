/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  BurnV1LiquidityModule,
  BurnV1LiquidityModuleInterface,
} from "../BurnV1LiquidityModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IV1Pool",
        name: "sepPool_",
        type: "address",
      },
      {
        internalType: "contract IV1Pool",
        name: "decPool_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IV1Pool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumFYDaiPrice",
        type: "uint256",
      },
    ],
    name: "burnForDai",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decPool",
    outputs: [
      {
        internalType: "contract IV1Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sepPool",
    outputs: [
      {
        internalType: "contract IV1Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class BurnV1LiquidityModule__factory {
  static readonly abi = _abi;
  static createInterface(): BurnV1LiquidityModuleInterface {
    return new utils.Interface(_abi) as BurnV1LiquidityModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BurnV1LiquidityModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BurnV1LiquidityModule;
  }
}
