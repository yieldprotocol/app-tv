/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  YieldMathWrapper,
  YieldMathWrapperInterface,
} from "../YieldMathWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseReserves",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "fyTokenReserves",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "fyTokenAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "timeTillMaturity",
        type: "uint128",
      },
      {
        internalType: "int128",
        name: "k",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "g",
        type: "int128",
      },
    ],
    name: "baseInForFYTokenOut",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseReserves",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "fyTokenReserves",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "fyTokenAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "timeTillMaturity",
        type: "uint128",
      },
      {
        internalType: "int128",
        name: "k",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "g",
        type: "int128",
      },
    ],
    name: "baseOutForFYTokenIn",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseReserves",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "fyTokenReserves",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "timeTillMaturity",
        type: "uint128",
      },
      {
        internalType: "int128",
        name: "k",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "g",
        type: "int128",
      },
    ],
    name: "fyTokenInForBaseOut",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseReserves",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "fyTokenReserves",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "timeTillMaturity",
        type: "uint128",
      },
      {
        internalType: "int128",
        name: "k",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "g",
        type: "int128",
      },
    ],
    name: "fyTokenOutForBaseIn",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
    ],
    name: "log_2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "y",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "z",
        type: "uint128",
      },
    ],
    name: "pow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
    ],
    name: "pow_2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class YieldMathWrapper__factory {
  static readonly abi = _abi;
  static createInterface(): YieldMathWrapperInterface {
    return new utils.Interface(_abi) as YieldMathWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldMathWrapper {
    return new Contract(address, _abi, signerOrProvider) as YieldMathWrapper;
  }
}
