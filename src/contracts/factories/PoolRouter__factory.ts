/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { PoolRouter, PoolRouterInterface } from "../PoolRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolFactory",
        name: "factory_",
        type: "address",
      },
      {
        internalType: "contract IWETH9",
        name: "weth_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum PoolDataTypes.Operation[]",
        name: "operations",
        type: "uint8[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "batch",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IPoolFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class PoolRouter__factory {
  static readonly abi = _abi;
  static createInterface(): PoolRouterInterface {
    return new utils.Interface(_abi) as PoolRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolRouter {
    return new Contract(address, _abi, signerOrProvider) as PoolRouter;
  }
}
